<?xml version="1.0" encoding="UTF-8"?>
<seatml>
  <general name="calc">
    <adaptor name="out" type="rtcout" datatype="TimedString" />
    <adaptor name="in" type="rtcin" datatype="TimedString" />
    <script>
      global opr, ans, lastkey, current
      opr="="
      ans=None
      current="0"
   </script>

   <script>
      def calc_exec():
        global current, ans
        print ans, opr, current
        try:
          exp = "float("+ans +")"+ opr + current
          print exp
          ans = str(eval(exp))
          return ans
        except:
          return "ERROR"
      
      def getOperation(str):
        if str == 'Add':
          return '+'
        elif str == 'Subtract':
          return '-'
        elif str == 'Multiply':
          return '*'
        elif str == 'Divide':
          return '/'
        else:
          return None
   </script>
  </general>

  <!-- Reset (Init) Mode : Input first value -->
  <state name="reset_mode">
    <onentry>
       <script sendto="out">
        print "=== Reset Mode ===="
        current="0"
        ans=current
        opr=None
        rtc_result=current
       </script>
    </onentry>
    
    <rule>
       <key>0</key>
       <script sendto="out">
        current=rtc_in_data
        rtc_result=current
       </script>
    </rule>
    
    <rule>
       <key>(1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=rtc_in_data
        rtc_result=current
       </script>
       <statetransition>int1_mode</statetransition>
    </rule>

    <rule>
      <key>Comma</key>
      <script sendto="out">
        current="0."
        rtc_result=current
      </script>
      <statetransition>float1_mode</statetransition>
    </rule>

     <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>

     <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        ans=current
        opr=getOperation(rtc_in_data)
       </script>
       <statetransition>input2_mode</statetransition>
    </rule>
    
  </state>

  <state name="int1_mode">
    <onentry>
      <script >
        print "=== int1 Mode ===="
      </script>
    </onentry>

    <rule>
       <key>(0|1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=current+rtc_in_data
        rtc_result=current
       </script>
    </rule>

    <rule>
      <key>Comma</key>
      <script sendto="out">
        current=current+"."
        rtc_result=current
      </script>
      <statetransition>float1_mode</statetransition>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        ans=current
        opr=getOperation(rtc_in_data)
       </script>
       <statetransition>input2_mode</statetransition>
    </rule>

    <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>

  </state>

  <state name="float1_mode">
    <onentry>
      <script >
        print "=== float1 Mode ===="
      </script>
    </onentry>
    <rule>
       <key>(0|1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=current+rtc_in_data
        rtc_result=current
       </script>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        ans=current
        opr=getOperation(rtc_in_data)
       </script>
       <statetransition>input2_mode</statetransition>
    </rule>

    <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>

  </state>

  <!-- Input2 Mode: Input second value -->
  <state name="input2_mode">
    <onentry>
      <script >
        print "=== input2 Mode ===="
      </script>
    </onentry>

    <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>
    
    <rule>
       <key>0</key>
       <script sendto="out">
        current=rtc_in_data
        rtc_result=current
       </script>
    </rule>
    
    <rule>
       <key>(1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=rtc_in_data
        rtc_result=current
       </script>
       <statetransition>int2_mode</statetransition>
    </rule>

    <rule>
      <key>Comma</key>
      <script sendto="out">
        current="0."
        rtc_result=current
      </script>
      <statetransition>float2_mode</statetransition>
    </rule>

    <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        opr=getOperation(rtc_in_data)
       </script>
    </rule>
    
  </state>

  <state name="int2_mode">
    <onentry>
      <script >
        print "=== int2 Mode ===="
      </script>
    </onentry>

    <rule>
       <key>(0|1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=current+rtc_in_data
        rtc_result=current
       </script>
    </rule>

    <rule>
      <key>Comma</key>
      <script sendto="out">
        current=current+"."
        rtc_result=current
      </script>
      <statetransition>float2_mode</statetransition>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        ans=current
        opr=getOperation(rtc_in_data)
        rtc_result=calc_exec()
       </script>
       <statetransition>calc_mode</statetransition>
    </rule>

    <rule>
       <key>Clear</key>
       <statetransition>input2_mode</statetransition>
    </rule>

    <rule>
      <key>Equal</key>
      <script sendto="out">
        ans=calc_exec()
        rtc_result=ans
      </script>
       <statetransition>calc_mode</statetransition>
    </rule>

  </state>

  <state name="float2_mode">
    <onentry>
      <script >
        print "=== float2 Mode ===="
      </script>
    </onentry>

    <rule>
       <key>(0|1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=current+rtc_in_data
        rtc_result=current
       </script>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        ans=current
        opr=getOperation(rtc_in_data)
        rtc_result=calc_exec()
       </script>
       <statetransition>calc_mode</statetransition>
    </rule>

    <rule>
       <key>Clear</key>
       <statetransition>input2_mode</statetransition>
    </rule>

    <rule>
      <key>Equal</key>
      <script sendto="out">
        ans=calc_exec()
        rtc_result=ans
      </script>
       <statetransition>calc_mode</statetransition>
    </rule>

  </state>

  <!-- Calc Mode: Apply calcuration -->
  <state name="calc_mode">
    <onentry>
      <script >
        print "=== calc Mode ===="
      </script>
    </onentry>

    <rule>
       <key>Clear</key>
       <statetransition>reset_mode</statetransition>
    </rule>

    <rule>
       <key>(1|2|3|4|5|6|7|8|9)</key>
       <script sendto="out">
        current=rtc_in_data
        rtc_result=current
       </script>
       <statetransition>int2_mode</statetransition>
    </rule>

    <rule>
      <key>Comma</key>
      <script sendto="out">
        current="0."
        rtc_result=current
      </script>
      <statetransition>float2_mode</statetransition>
    </rule>

    <rule>
       <key>(Add|Subtract|Multiply|Divide)</key>
       <script sendto="out">
        opr=getOperation(rtc_in_data)
       </script>
       <statetransition>input2_mode</statetransition>
    </rule>

    <rule>
       <key>Equal</key>
       <script sendto="out">
        ans=calc_exec()
        rtc_result=ans
       </script>
    </rule>
  </state>

</seatml>
